{#
 # Convolution, unrolled loops
 #}

// Layer {{ layer_id }}: Conv
{% for m in range(output_shape[1]) %}
  {% for h in range(output_shape[2]) %}
    {% for w in range(output_shape[3]) -%}
layer_{{ layer_id }}_output[{{ m }}][{{ h }}][{{ w }}] = layer_{{ layer_id }}_bias[{{ m }}]
      {%- for c in range(kernel_shape[1]) -%}
        {%- for kH in range(kernel_shape[2]) -%}
          {%- set iH = h * strides[0] + kH - pads[0] -%}
          {%- if iH >= 0 and iH < input_shape[2] -%}
          {%- for kW in range(kernel_shape[3]) -%}
            {%- set iW = w * strides[1] + kW - pads[1] -%}
            {%- if iW >= 0 and iW < input_shape[3] %}
 + layer_{{ layer_id }}_weight[{{ m }}][{{ c }}][{{ kH }}][{{ kW }}] * layer_{{ layer_id - 1 }}_output[{{ c }}][{{ iH }}][{{ iW }}]
            {%- endif -%}
          {%- endfor -%}
          {%- endif -%}
        {%- endfor -%}
      {%- endfor -%};
    {% endfor %}
  {% endfor %}
{% endfor %}
